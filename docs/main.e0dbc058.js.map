{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCIA,EAAA,MAAA,CAAA,EAAA,WAAA,IAAsB,GAsBtB,EAAA,MAAA,CAAA,EAAA,aAAA,IAAsB,GA8BtB,EAAA,MAAA,CAAA,EAAA,eAAA,IAAgB,GAahB,EAAA,MAAA,CAAA,EAAA,YAAA,IAAsB,GAYtB,EAAA,MAAA,CAAA,EAAA,cAAA,IAAsB,GAYtB,EAAA,MAAA,CAAA,EAAA,eAAA,IAAsB,GA7FtB,IAAA,EAAA,EAAA,sBACA,EAAA,EAAA,iBAGO,eAAe,EAAS,CAAI,EACjC,IAAM,EAAO,AAAA,EAAA,IAAG,CAAE,WAAW,CAC7B,GAAI,CAAC,EAEH,OADA,QAAQ,KAAK,CAAC,6BACP,CAAA,EAET,GAAI,CAQF,OAPA,MAAM,AAAA,CAAA,EAAA,EAAA,MAAM,AAAN,EA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","sources":["<anon>","scripts/script.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"kDc36\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n// Adds a new habit for the authenticated user\nparcelHelpers.export(exports, \"addHabit\", ()=>addHabit);\n// Loads habits for the current user and displays them in the UI\nparcelHelpers.export(exports, \"loadHabits\", ()=>loadHabits);\n// Helper to display a habit in the UI\nparcelHelpers.export(exports, \"displayHabit\", ()=>displayHabit);\n// Edits a habit's name\nparcelHelpers.export(exports, \"editHabit\", ()=>editHabit);\n// Deletes a habit\nparcelHelpers.export(exports, \"deleteHabit\", ()=>deleteHabit);\n// Updates a habit's check-in (i.e. streak) if not already checked in today\nparcelHelpers.export(exports, \"checkInHabit\", ()=>checkInHabit);\nvar _firestore = require(\"firebase/firestore\");\nvar _firebaseJs = require(\"./firebase.js\");\nasync function addHabit(name) {\n    const user = (0, _firebaseJs.auth).currentUser;\n    if (!user) {\n        console.error(\"User is not authenticated\");\n        return false;\n    }\n    try {\n        await (0, _firestore.addDoc)((0, _firestore.collection)((0, _firebaseJs.db), \"habits\"), {\n            name,\n            streak: 0,\n            lastCheckIn: null,\n            email: user.email.toLowerCase()\n        });\n        await loadHabits();\n        return true;\n    } catch (error) {\n        console.error(\"Error adding habit:\", error);\n        return false;\n    }\n}\nasync function loadHabits() {\n    const habitList = document.getElementById(\"habitList\");\n    if (!habitList) return;\n    const user = (0, _firebaseJs.auth).currentUser;\n    if (!user) {\n        console.error(\"User is not signed in\");\n        habitList.innerHTML = \"<li>Please sign in to view your habits.</li>\";\n        return;\n    }\n    try {\n        const habitsCollection = (0, _firestore.collection)((0, _firebaseJs.db), \"habits\");\n        const q = (0, _firestore.query)(habitsCollection, (0, _firestore.where)(\"email\", \"==\", user.email.toLowerCase()));\n        const snapshot = await (0, _firestore.getDocs)(q);\n        const habits = snapshot.docs.map((docSnap)=>({\n                id: docSnap.id,\n                ...docSnap.data()\n            }));\n        habitList.innerHTML = \"\";\n        if (habits.length === 0) habitList.innerHTML = \"<li>No habits found. Add a new habit.</li>\";\n        else habits.forEach((habit)=>displayHabit(habit, habitList));\n    } catch (error) {\n        console.error(\"Error loading habits:\", error);\n        habitList.innerHTML = \"<li>Error loading habits.</li>\";\n    }\n}\nfunction displayHabit(habit, habitList) {\n    const li = document.createElement(\"li\");\n    li.innerHTML = `\n    <span>${habit.name}</span>\n    <span>\\u{1F525} Streak: ${habit.streak} days</span>\n    <button class=\"edit-btn\" data-id=\"${habit.id}\">Edit</button>\n    <button class=\"delete-btn\" data-id=\"${habit.id}\">Delete</button>\n    <button class=\"checkin-btn\" data-id=\"${habit.id}\" data-streak=\"${habit.streak}\" data-lastcheckin=\"${habit.lastCheckIn}\">Check-in</button>\n  `;\n    habitList.appendChild(li);\n}\nasync function editHabit(habitId, newName) {\n    try {\n        await (0, _firestore.updateDoc)((0, _firestore.doc)((0, _firebaseJs.db), \"habits\", habitId), {\n            name: newName\n        });\n        await loadHabits();\n        return true;\n    } catch (error) {\n        console.error(\"Error editing habit:\", error);\n        return false;\n    }\n}\nasync function deleteHabit(habitId) {\n    try {\n        await (0, _firestore.deleteDoc)((0, _firestore.doc)((0, _firebaseJs.db), \"habits\", habitId));\n        await loadHabits();\n        return true;\n    } catch (error) {\n        console.error(\"Error deleting habit:\", error);\n        return false;\n    }\n}\nasync function checkInHabit(habitId, currentStreak, lastCheckIn) {\n    const today = new Date().toDateString();\n    if (lastCheckIn === today) {\n        alert(\"You already checked in today!\");\n        return;\n    }\n    let newStreak;\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (lastCheckIn === yesterday.toDateString()) newStreak = currentStreak + 1;\n    else newStreak = 1;\n    try {\n        await (0, _firestore.updateDoc)((0, _firestore.doc)((0, _firebaseJs.db), \"habits\", habitId), {\n            streak: newStreak,\n            lastCheckIn: today\n        });\n        await loadHabits();\n        return true;\n    } catch (error) {\n        console.error(\"Error checking in habit:\", error);\n        return false;\n    }\n}\n\n},{\"firebase/firestore\":\"59KHr\",\"./firebase.js\":\"b4IJj\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}]},[\"kDc36\"], \"kDc36\", \"parcelRequire94c2\")\n\n//# sourceMappingURL=main.e0dbc058.js.map\n","import { collection, addDoc, getDocs, deleteDoc, doc, updateDoc, query, where } from \"firebase/firestore\";\r\nimport { auth, db } from \"./firebase.js\";\r\n\r\n// Adds a new habit for the authenticated user\r\nexport async function addHabit(name) {\r\n  const user = auth.currentUser;\r\n  if (!user) {\r\n    console.error(\"User is not authenticated\");\r\n    return false;\r\n  }\r\n  try {\r\n    await addDoc(collection(db, \"habits\"), {\r\n      name,          // Habit name\r\n      streak: 0,     // Initial streak is 0\r\n      lastCheckIn: null,\r\n      email: user.email.toLowerCase()\r\n    });\r\n    await loadHabits();\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error adding habit:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Loads habits for the current user and displays them in the UI\r\nexport async function loadHabits() {\r\n  const habitList = document.getElementById(\"habitList\");\r\n  if (!habitList) return;\r\n  \r\n  const user = auth.currentUser;\r\n  if (!user) {\r\n    console.error(\"User is not signed in\");\r\n    habitList.innerHTML = \"<li>Please sign in to view your habits.</li>\";\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    const habitsCollection = collection(db, \"habits\");\r\n    const q = query(habitsCollection, where(\"email\", \"==\", user.email.toLowerCase()));\r\n    const snapshot = await getDocs(q);\r\n    const habits = snapshot.docs.map(docSnap => ({ id: docSnap.id, ...docSnap.data() }));\r\n    \r\n    habitList.innerHTML = \"\";\r\n    if (habits.length === 0) {\r\n      habitList.innerHTML = \"<li>No habits found. Add a new habit.</li>\";\r\n    } else {\r\n      habits.forEach(habit => displayHabit(habit, habitList));\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error loading habits:\", error);\r\n    habitList.innerHTML = \"<li>Error loading habits.</li>\";\r\n  }\r\n}\r\n\r\n// Helper to display a habit in the UI\r\nexport function displayHabit(habit, habitList) {\r\n  const li = document.createElement(\"li\");\r\n  li.innerHTML = `\r\n    <span>${habit.name}</span>\r\n    <span>🔥 Streak: ${habit.streak} days</span>\r\n    <button class=\"edit-btn\" data-id=\"${habit.id}\">Edit</button>\r\n    <button class=\"delete-btn\" data-id=\"${habit.id}\">Delete</button>\r\n    <button class=\"checkin-btn\" data-id=\"${habit.id}\" data-streak=\"${habit.streak}\" data-lastcheckin=\"${habit.lastCheckIn}\">Check-in</button>\r\n  `;\r\n  habitList.appendChild(li);\r\n}\r\n\r\n// Edits a habit's name\r\nexport async function editHabit(habitId, newName) {\r\n  try {\r\n    await updateDoc(doc(db, \"habits\", habitId), { name: newName });\r\n    await loadHabits();\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error editing habit:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Deletes a habit\r\nexport async function deleteHabit(habitId) {\r\n  try {\r\n    await deleteDoc(doc(db, \"habits\", habitId));\r\n    await loadHabits();\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error deleting habit:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Updates a habit's check-in (i.e. streak) if not already checked in today\r\nexport async function checkInHabit(habitId, currentStreak, lastCheckIn) {\r\n  const today = new Date().toDateString();\r\n  if (lastCheckIn === today) {\r\n    alert(\"You already checked in today!\");\r\n    return;\r\n  }\r\n  let newStreak;\r\n  const yesterday = new Date();\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  if (lastCheckIn === yesterday.toDateString()) {\r\n    newStreak = currentStreak + 1;\r\n  } else {\r\n    newStreak = 1;\r\n  }\r\n  try {\r\n    await updateDoc(doc(db, \"habits\", habitId), {\r\n      streak: newStreak,\r\n      lastCheckIn: today\r\n    });\r\n    await loadHabits();\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error checking in habit:\", error);\r\n    return false;\r\n  }\r\n}\r\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","__globalThis","parcelHelpers","defineInteropFlag","export","addHabit","loadHabits","displayHabit","editHabit","deleteHabit","checkInHabit","_firestore","_firebaseJs","user","auth","currentUser","console","error","addDoc","collection","db","streak","lastCheckIn","email","toLowerCase","habitList","document","getElementById","innerHTML","habitsCollection","q","query","where","habits","snapshot","getDocs","docs","map","docSnap","data","forEach","habit","li","createElement","appendChild","habitId","newName","updateDoc","doc","deleteDoc","currentStreak","newStreak","today","Date","toDateString","alert","yesterday","setDate","getDate"],"version":3,"file":"main.e0dbc058.js.map"}