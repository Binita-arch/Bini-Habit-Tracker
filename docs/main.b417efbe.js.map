{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,E,S,E","sources":["<anon>","scripts/script.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $ilpIi = parcelRequire(\"ilpIi\");\n\nvar $96gVx = parcelRequire(\"96gVx\");\nasync function $93d4580a48e37f73$export$6c833caebffd652d(name) {\n    const user = (0, $96gVx.auth).currentUser;\n    if (!user) {\n        console.error(\"User is not authenticated\");\n        return false;\n    }\n    try {\n        await (0, $ilpIi.addDoc)((0, $ilpIi.collection)((0, $96gVx.db), \"habits\"), {\n            name: name,\n            streak: 0,\n            lastCheckIn: null,\n            email: user.email.toLowerCase()\n        });\n        await $93d4580a48e37f73$export$adb5e0fb06f56375();\n        return true;\n    } catch (error) {\n        console.error(\"Error adding habit:\", error);\n        return false;\n    }\n}\nasync function $93d4580a48e37f73$export$adb5e0fb06f56375() {\n    const habitList = document.getElementById(\"habitList\");\n    if (!habitList) return;\n    const user = (0, $96gVx.auth).currentUser;\n    if (!user) {\n        console.error(\"User is not signed in\");\n        habitList.innerHTML = \"<li>Please sign in to view your habits.</li>\";\n        return;\n    }\n    try {\n        const habitsCollection = (0, $ilpIi.collection)((0, $96gVx.db), \"habits\");\n        const q = (0, $ilpIi.query)(habitsCollection, (0, $ilpIi.where)(\"email\", \"==\", user.email.toLowerCase()));\n        const snapshot = await (0, $ilpIi.getDocs)(q);\n        const habits = snapshot.docs.map((docSnap)=>({\n                id: docSnap.id,\n                ...docSnap.data()\n            }));\n        habitList.innerHTML = \"\";\n        if (habits.length === 0) habitList.innerHTML = \"<li>No habits found. Add a new habit.</li>\";\n        else habits.forEach((habit)=>$93d4580a48e37f73$export$31430b3056ecaa1e(habit, habitList));\n    } catch (error) {\n        console.error(\"Error loading habits:\", error);\n        habitList.innerHTML = \"<li>Error loading habits.</li>\";\n    }\n}\nfunction $93d4580a48e37f73$export$31430b3056ecaa1e(habit, habitList) {\n    const li = document.createElement(\"li\");\n    li.innerHTML = `\n    <span>${habit.name}</span>\n    <span>\\u{1F525} Streak: ${habit.streak} days</span>\n    <button class=\"edit-btn\" data-id=\"${habit.id}\">Edit</button>\n    <button class=\"delete-btn\" data-id=\"${habit.id}\">Delete</button>\n    <button class=\"checkin-btn\" data-id=\"${habit.id}\" data-streak=\"${habit.streak}\" data-lastcheckin=\"${habit.lastCheckIn}\">Check-in</button>\n  `;\n    habitList.appendChild(li);\n}\nasync function $93d4580a48e37f73$export$c97ac0e826016b91(habitId, newName) {\n    try {\n        await (0, $ilpIi.updateDoc)((0, $ilpIi.doc)((0, $96gVx.db), \"habits\", habitId), {\n            name: newName\n        });\n        await $93d4580a48e37f73$export$adb5e0fb06f56375();\n        return true;\n    } catch (error) {\n        console.error(\"Error editing habit:\", error);\n        return false;\n    }\n}\nasync function $93d4580a48e37f73$export$a947bd0c8b4ce2c1(habitId) {\n    try {\n        await (0, $ilpIi.deleteDoc)((0, $ilpIi.doc)((0, $96gVx.db), \"habits\", habitId));\n        await $93d4580a48e37f73$export$adb5e0fb06f56375();\n        return true;\n    } catch (error) {\n        console.error(\"Error deleting habit:\", error);\n        return false;\n    }\n}\nasync function $93d4580a48e37f73$export$bb1303ecc369aed3(habitId, currentStreak, lastCheckIn) {\n    const today = new Date().toDateString();\n    if (lastCheckIn === today) {\n        alert(\"You already checked in today!\");\n        return;\n    }\n    let newStreak;\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (lastCheckIn === yesterday.toDateString()) newStreak = currentStreak + 1;\n    else newStreak = 1;\n    try {\n        await (0, $ilpIi.updateDoc)((0, $ilpIi.doc)((0, $96gVx.db), \"habits\", habitId), {\n            streak: newStreak,\n            lastCheckIn: today\n        });\n        await $93d4580a48e37f73$export$adb5e0fb06f56375();\n        return true;\n    } catch (error) {\n        console.error(\"Error checking in habit:\", error);\n        return false;\n    }\n}\n\n\n//# sourceMappingURL=main.b417efbe.js.map\n","import { collection, addDoc, getDocs, deleteDoc, doc, updateDoc, query, where } from \"firebase/firestore\";\r\nimport { auth, db } from \"./firebase.js\";\r\n\r\n// Adds a new habit for the authenticated user\r\nexport async function addHabit(name) {\r\n  const user = auth.currentUser;\r\n  if (!user) {\r\n    console.error(\"User is not authenticated\");\r\n    return false;\r\n  }\r\n  try {\r\n    await addDoc(collection(db, \"habits\"), {\r\n      name,          // Habit name\r\n      streak: 0,     // Initial streak is 0\r\n      lastCheckIn: null,\r\n      email: user.email.toLowerCase()\r\n    });\r\n    await loadHabits();\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error adding habit:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Loads habits for the current user and displays them in the UI\r\nexport async function loadHabits() {\r\n  const habitList = document.getElementById(\"habitList\");\r\n  if (!habitList) return;\r\n  \r\n  const user = auth.currentUser;\r\n  if (!user) {\r\n    console.error(\"User is not signed in\");\r\n    habitList.innerHTML = \"<li>Please sign in to view your habits.</li>\";\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    const habitsCollection = collection(db, \"habits\");\r\n    const q = query(habitsCollection, where(\"email\", \"==\", user.email.toLowerCase()));\r\n    const snapshot = await getDocs(q);\r\n    const habits = snapshot.docs.map(docSnap => ({ id: docSnap.id, ...docSnap.data() }));\r\n    \r\n    habitList.innerHTML = \"\";\r\n    if (habits.length === 0) {\r\n      habitList.innerHTML = \"<li>No habits found. Add a new habit.</li>\";\r\n    } else {\r\n      habits.forEach(habit => displayHabit(habit, habitList));\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error loading habits:\", error);\r\n    habitList.innerHTML = \"<li>Error loading habits.</li>\";\r\n  }\r\n}\r\n\r\n// Helper to display a habit in the UI\r\nexport function displayHabit(habit, habitList) {\r\n  const li = document.createElement(\"li\");\r\n  li.innerHTML = `\r\n    <span>${habit.name}</span>\r\n    <span>ðŸ”¥ Streak: ${habit.streak} days</span>\r\n    <button class=\"edit-btn\" data-id=\"${habit.id}\">Edit</button>\r\n    <button class=\"delete-btn\" data-id=\"${habit.id}\">Delete</button>\r\n    <button class=\"checkin-btn\" data-id=\"${habit.id}\" data-streak=\"${habit.streak}\" data-lastcheckin=\"${habit.lastCheckIn}\">Check-in</button>\r\n  `;\r\n  habitList.appendChild(li);\r\n}\r\n\r\n// Edits a habit's name\r\nexport async function editHabit(habitId, newName) {\r\n  try {\r\n    await updateDoc(doc(db, \"habits\", habitId), { name: newName });\r\n    await loadHabits();\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error editing habit:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Deletes a habit\r\nexport async function deleteHabit(habitId) {\r\n  try {\r\n    await deleteDoc(doc(db, \"habits\", habitId));\r\n    await loadHabits();\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error deleting habit:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Updates a habit's check-in (i.e. streak) if not already checked in today\r\nexport async function checkInHabit(habitId, currentStreak, lastCheckIn) {\r\n  const today = new Date().toDateString();\r\n  if (lastCheckIn === today) {\r\n    alert(\"You already checked in today!\");\r\n    return;\r\n  }\r\n  let newStreak;\r\n  const yesterday = new Date();\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  if (lastCheckIn === yesterday.toDateString()) {\r\n    newStreak = currentStreak + 1;\r\n  } else {\r\n    newStreak = 1;\r\n  }\r\n  try {\r\n    await updateDoc(doc(db, \"habits\", habitId), {\r\n      streak: newStreak,\r\n      lastCheckIn: today\r\n    });\r\n    await loadHabits();\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error checking in habit:\", error);\r\n    return false;\r\n  }\r\n}\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register"],"version":3,"file":"main.b417efbe.js.map"}